# DOC: https://docs.github.com/en/actions/publishing-packages/publishing-docker-images
name: Build the app docker image

on:
  push

jobs:
  versioning:
    runs-on: ubuntu-latest
    name: Compute versions
    outputs:
      version: ${{ steps.versioning.outputs.version }}
      imageName: ${{ steps.versioning.outputs.imageName }}

    steps:

      - uses: actions/checkout@v4
      - name: Compute versions
        id: versioning
        run: |
          repo_name=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          version=$(git rev-parse --short HEAD)
          imageName=ghcr.io/$repo_name:$version
          echo "name=$repo_name" >> $GITHUB_OUTPUT
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "imageName=$imageName" >> $GITHUB_OUTPUT
          echo "the image name :'$imageName'"
          echo "## 🔖 New version '$version'" >> $GITHUB_STEP_SUMMARY
          echo "## 📦 Image '$imageName'" >> $GITHUB_STEP_SUMMARY

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Unit tests
        run: go test -run TestMakeHandlerFunc ./ -v


  build-and-push:
    runs-on: ubuntu-latest
    name: Build and push docker image
    permissions:
      contents: read
      packages: write

    needs: [ versioning, unit-tests ]

    steps:
      - uses: actions/checkout@v4

      - run: echo "${{secrets.GITHUB_TOKEN}}" | docker login ghcr.io -u "${{github.actor}}" --password-stdin

      - run: docker build -t ${{needs.versioning.outputs.imageName}} .

      - run: docker tag ${{needs.versioning.outputs.imageName}} ${{needs.versioning.outputs.imageName}}

      - run: docker push ${{needs.versioning.outputs.imageName}}


  
  api-tests:
    runs-on: ubuntu-latest
    needs: [ build-and-push, versioning ]

    # Our API server, running in the background
    services:
      backend:
        image: ${{needs.versioning.outputs.imageName}}
        credentials:
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
        ports:
          - 4321:8080

    steps:
      - uses: actions/checkout@v4
      - name: API tests
        run: |
          echo "## 🌐 API tests using ${{needs.v.outputs.imageName}}" >> $GITHUB_STEP_SUMMARY
          go test ./test/apitests -tags=api-test
          
